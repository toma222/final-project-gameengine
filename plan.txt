
Game engine design paper

We have systems
	- Graphics
	- Audio
	- Animation

That act like API's for the engine

The engine 

Resources
	- reads the actual obj data to a structure
	- passes it to the graphics system to get transformed into vertex and index buffer objects

	- Read from disk -> (Read metadata from disk) -> transform to System usable resource
	- suzane.obj -> Mesh struct -> vertex + index buffers

	- So like a resource processing chain

Organizing the systems
	- Arraylist

Graphics System
	- Assosiated resources
	- OpenGL
		- Loading shaders
		- Loading vertex buffer
		- Loading index buffer
		- Loading buffers from model

The World for ECS
	- Uses the Systems to do more complex stuff

System
	- Pre world update
	- Update world

